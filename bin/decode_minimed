#!/usr/bin/env ruby

begin
  require 'minimed_rf'
rescue LoadError
  require 'rubygems'
  require 'minimed_rf'
end

def handle_input(input)
  return if input.length < 6 || input[0] == "#"

  # remove spaces
  input = input.gsub(/\W/,'')

  # Look for second byte 00, which is inserted by RF Studio as length field?
  if input[2,2] == "00"
    input.slice!(2,2)
  end

  # try raw
  packet = MinimedRF::Packet.decode_from_radio(input)

  # try decoded
  if !packet.valid?
    puts packet.raw_hex_data
    puts "Raw didn't working; trying from already decoded"
    packet = MinimedRF::Packet.from_hex(input)
  end
  puts packet.raw_hex_data
  puts packet.to_s
  #puts packet.crc
  #puts packet.computed_crc
  #puts packet.to_message

end

if ARGV.length > 0
  handle_input(ARGV.first)
else
  while line = STDIN.gets
    handle_input(line.chomp)
  end
end
